-   Composer require tymon/jwt-auth

-   'providers' => [

    ...

    Tymon\JWTAuth\Providers\LaravelServiceProvider::class,
]

-   php artisan vendor:publish --provider="Tymon\JWTAuth\Providers\LaravelServiceProvider"

-   php artisan jwt:secret

-   Dans le model user faire cette importation:
        use Tymon\JWTAuth\Contracts\JWTSubject;

-   Implémenter les deux méthodes suivantes:
     public function getJWTIdentifier()
    {
        return $this->getKey();
    }

    public function getJWTCustomClaims()
    {
        return [];
    }

-   config/auth.php: on change dans defaut 'web' par 'api'

-   On descend puis dans guards: '
        guards' => [
            'api' => [
                'driver' => 'jwt',
                'provider' => 'users',
            ],
        ],
-   Dans les route ajouter le code suivant:
        Route::group([

            'middleware' => 'api',
            'prefix' => 'auth'

        ], function ($router) {

            Route::post('login', 'AuthController@login');
            Route::post('logout', 'AuthController@logout');
            Route::post('refresh', 'AuthController@refresh');
            Route::post('me', 'AuthController@me');
        
        });

-   Ensuite dans le UserController ou AuthController: